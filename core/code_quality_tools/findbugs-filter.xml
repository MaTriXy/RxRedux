<FindbugsPlugin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    pluginid="edu.umd.cs.findbugs.plugins.core" provider="FindBugs project"
    update-url="http://update.findbugs.org/update-check" version="USE_FINDBUGS_VERSION"
    website="http://findbugs.sourceforge.net" xsi:noNamespaceSchemaLocation="findbugsplugin.xsd">

    <!--
Plugin descriptor for FindBugs "core" plugin.
This plugin is enabled by default.
-->
    <Cloud cloudClass="edu.umd.cs.findbugs.cloud.DoNothingCloud"
        id="edu.umd.cs.findbugs.cloud.doNothingCloud"
        usernameClass="edu.umd.cs.findbugs.cloud.username.NoNameLookup" />

    <PluginComponent componentClass="edu.umd.cs.findbugs.bugReporter.SuppressionDecorator"
        componentKind="edu.umd.cs.findbugs.bugReporter.BugReporterDecorator" disabled="true"
        id="edu.umd.cs.findbugs.bugReporter.SuppressI18N">
        <Property key="category">I18N</Property>
    </PluginComponent>
    <PluginComponent componentClass="edu.umd.cs.findbugs.bugReporter.MaxRankDecorator"
        componentKind="edu.umd.cs.findbugs.bugReporter.BugReporterDecorator" disabled="true"
        id="edu.umd.cs.findbugs.bugReporter.MaxRank14">
        <Property key="maxRank">14</Property>
    </PluginComponent>
    <PluginComponent componentClass="edu.umd.cs.findbugs.bugReporter.SuppressionDecorator"
        componentKind="edu.umd.cs.findbugs.bugReporter.BugReporterDecorator" disabled="true"
        id="edu.umd.cs.findbugs.bugReporter.SelectivelySuppressI18N">
        <Property key="category">I18N</Property>
        <Property key="packageSource">i18n.properties</Property>
    </PluginComponent>
    <PluginComponent componentClass="edu.umd.cs.findbugs.bugReporter.SuppressionDecorator"
        componentKind="edu.umd.cs.findbugs.bugReporter.BugReporterDecorator" disabled="true"
        id="edu.umd.cs.findbugs.bugReporter.SuppressMultithreaded">
        <Property key="category">MT_CORRECTNESS</Property>
    </PluginComponent>
    <PluginComponent componentClass="edu.umd.cs.findbugs.bugReporter.SuppressionDecorator"
        componentKind="edu.umd.cs.findbugs.bugReporter.BugReporterDecorator" disabled="true"
        id="edu.umd.cs.findbugs.bugReporter.SuppressMalicious">
        <Property key="category">MALICIOUS_CODE</Property>
    </PluginComponent>


    <FindBugsMain class="edu.umd.cs.findbugs.AddMessages" cmd="addMessages" kind="poweruser" />
    <FindBugsMain analysis="true" class="edu.umd.cs.findbugs.FindBugs2" cmd="analyze" />
    <FindBugsMain analysis="true" class="edu.umd.cs.findbugs.gui2.Driver" cmd="gui" />
    <FindBugsMain class="edu.umd.cs.findbugs.PrintingBugReporter" cmd="list" />
    <FindBugsMain class="edu.umd.cs.findbugs.ShowHelp" cmd="help" />
    <FindBugsMain class="edu.umd.cs.findbugs.Version" cmd="version" />
    <FindBugsMain class="edu.umd.cs.findbugs.workflow.Filter" cmd="filter" />
    <FindBugsMain class="edu.umd.cs.findbugs.workflow.SetBugDatabaseInfo" cmd="set" />

    <FindBugsMain class="edu.umd.cs.findbugs.workflow.MineBugHistory" cmd="history"
        kind="history" />
    <FindBugsMain class="edu.umd.cs.findbugs.workflow.UnionResults" cmd="union" kind="history" />
    <FindBugsMain class="edu.umd.cs.findbugs.workflow.Update" cmd="merge" kind="history" />

    <FindBugsMain class="edu.umd.cs.findbugs.visitclass.PrintClass" cmd="dis" kind="utility" />
    <FindBugsMain class="edu.umd.cs.findbugs.workflow.ListErrors" cmd="errors" />

    <OrderingConstraints>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.FieldItemSummary" />
            <LaterCategory name="reporting" spanplugins="true" />
        </SplitPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.FieldItemSummary" />
            <Later class="edu.umd.cs.findbugs.detect.NoteUnconditionalParamDerefs" />
        </WithinPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.FieldItemSummary" />
            <Later class="edu.umd.cs.findbugs.detect.BuildUnconditionalParamDerefDatabase" />
        </WithinPass>
        <!--
NoteSuppressedWarnings should be run in
an earlier pass than all reporting detectors, including those in
other plugins.
-->
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.NoteSuppressedWarnings" />
            <LaterCategory name="reporting" spanplugins="true" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical" />
            <Later class="edu.umd.cs.findbugs.detect.FindHEmismatch" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures" />
            <Later class="edu.umd.cs.findbugs.detect.MethodReturnCheck" />
        </SplitPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.FindBugsSummaryStats" />
            <Later
                class="edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis" />
        </WithinPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.FindBugsSummaryStats" />
            <Later class="edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical" />
        </WithinPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.NoteSuppressedWarnings" />
            <Later
                class="edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis" />
        </WithinPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.NoteSuppressedWarnings" />
            <Later class="edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical" />
        </WithinPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.NoteSuppressedWarnings" />
            <Later class="edu.umd.cs.findbugs.detect.FindUnrelatedTypesInGenericContainer" />
        </SplitPass>
        <SplitPass>
            <Earlier
                class="edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis" />
            <Later class="edu.umd.cs.findbugs.detect.FindRefComparison" />
        </SplitPass>
        <SplitPass>
            <Earlier
                class="edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis" />
            <Later class="edu.umd.cs.findbugs.detect.FindUnrelatedTypesInGenericContainer" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.NoteSuppressedWarnings" />
            <Later class="edu.umd.cs.findbugs.detect.FindRefComparison" />
        </SplitPass>

        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.NoteAnnotationRetention" />
            <Later class="edu.umd.cs.findbugs.detect.DumbMethods" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers" />
            <Later class="edu.umd.cs.findbugs.detect.CheckTypeQualifiers" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase" />
            <Later class="edu.umd.cs.findbugs.detect.FindUnsatisfiedObligation" />
        </SplitPass>


        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.ReflectiveClasses" />
            <Later class="edu.umd.cs.findbugs.detect.UnreadFields" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.ExplicitSerialization" />
            <Later class="edu.umd.cs.findbugs.detect.SerializationIdiom" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.CalledMethods" />
            <Later class="edu.umd.cs.findbugs.detect.UncallableMethodOfAnonymousClass" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" />
            <Later class="edu.umd.cs.findbugs.detect.MethodReturnCheck" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" />
            <Later class="edu.umd.cs.findbugs.detect.FindUselessObjects" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" />
            <Later class="edu.umd.cs.findbugs.detect.FindDoubleCheck" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" />
            <Later class="edu.umd.cs.findbugs.detect.RepeatedConditionals" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.BuildStringPassthruGraph" />
            <Later class="edu.umd.cs.findbugs.detect.DumbMethodInvocations" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.BuildStringPassthruGraph" />
            <Later class="edu.umd.cs.findbugs.detect.CrossSiteScripting" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.BuildStringPassthruGraph" />
            <Later class="edu.umd.cs.findbugs.detect.FindSqlInjection" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.CalledMethods" />
            <Later class="edu.umd.cs.findbugs.detect.FindNullDeref" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.CalledMethods" />
            <Later class="edu.umd.cs.findbugs.detect.FindReturnRef" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.Methods" />
            <Later class="edu.umd.cs.findbugs.detect.ConfusionBetweenInheritedAndOuterMethod" />
        </SplitPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.NoteCheckReturnValueAnnotations" />
            <Later class="edu.umd.cs.findbugs.detect.MethodReturnCheck" />
        </SplitPass>

        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.NoteJCIPAnnotation" />
            <Later class="edu.umd.cs.findbugs.detect.FindInconsistentSync2" />
        </SplitPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.NoteUnconditionalParamDerefs" />
            <Later class="edu.umd.cs.findbugs.detect.FindNullDeref" />
        </WithinPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.NoteNonnullReturnValues" />
            <Later class="edu.umd.cs.findbugs.detect.FindNullDeref" />
        </WithinPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.NoteNonnullReturnValues" />
            <Later class="edu.umd.cs.findbugs.detect.UnreadFields" />
        </WithinPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.UnreadFields" />
            <Later class="edu.umd.cs.findbugs.detect.DontIgnoreResultOfPutIfAbsent" />
        </WithinPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.NoteUnconditionalParamDerefs" />
            <Later class="edu.umd.cs.findbugs.detect.UnreadFields" />
        </WithinPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.UnreadFields" />
            <Later class="edu.umd.cs.findbugs.detect.FindNullDeref" />
        </WithinPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.UnreadFields" />
            <Later class="edu.umd.cs.findbugs.detect.FindMaskedFields" />
        </WithinPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.UnreadFields" />
            <Later class="edu.umd.cs.findbugs.detect.FindUninitializedGet" />
        </WithinPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue" />
            <Later class="edu.umd.cs.findbugs.detect.FindNonSerializableStoreIntoSession" />
        </WithinPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue" />
            <Later class="edu.umd.cs.findbugs.detect.FindNonSerializableValuePassedToWriteObject" />
        </WithinPass>
        <WithinPass>
            <Earlier class="edu.umd.cs.findbugs.detect.UnreadFields" />
            <Later
                class="edu.umd.cs.findbugs.detect.ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass" />
        </WithinPass>
        <SplitPass>
            <Earlier class="edu.umd.cs.findbugs.detect.Methods" />
            <Later class="edu.umd.cs.findbugs.detect.NoteUnconditionalParamDerefs" />
        </SplitPass>


        <!--
Make CheckExpectedWarnings run in a separate pass, after all
reporting detectors have completed.
-->
        <SplitPass>
            <EarlierCategory name="reporting" spanplugins="true" />
            <Later class="edu.umd.cs.findbugs.detect.CheckExpectedWarnings" />
        </SplitPass>
    </OrderingConstraints>
    <Detector class="edu.umd.cs.findbugs.detect.FindRoughConstants" hidden="false"
        reports="CNT_ROUGH_CONSTANT_VALUE" speed="fast" />

    <Detector class="edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures"
        hidden="true" reports="" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.NoteSuppressedWarnings" hidden="true" reports=""
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.NoteAnnotationRetention" hidden="true" reports=""
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers" hidden="true"
        reports="" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.BuildInterproceduralCallGraph" disabled="true"
        hidden="true" reports="" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase" hidden="true"
        reports="" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.SynchronizeAndNullCheckField" hidden="false"
        reports="NP_SYNC_AND_NULL_CHECK_FIELD" speed="moderate" />
    <Detector class="edu.umd.cs.findbugs.detect.InitializeNonnullFieldsInConstructor" hidden="false"
        reports="NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR" speed="moderate" />
    <Detector class="edu.umd.cs.findbugs.detect.BooleanReturnNull" hidden="false"
        reports="NP_BOOLEAN_RETURN_NULL" />
    <Detector class="edu.umd.cs.findbugs.detect.OptionalReturnNull" hidden="false"
        reports="NP_OPTIONAL_RETURN_NULL" />
    <Detector class="edu.umd.cs.findbugs.detect.NoteJCIPAnnotation" hidden="true" reports=""
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.Methods" disabled="false" hidden="true" reports=""
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.ReflectiveClasses" disabled="false" hidden="true"
        reports="" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.CalledMethods" disabled="false" hidden="true"
        reports="" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" disabled="false"
        hidden="true" reports="" speed="moderate" />
    <Detector class="edu.umd.cs.findbugs.detect.BuildStringPassthruGraph" disabled="false"
        hidden="true" reports="" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.ConfusionBetweenInheritedAndOuterMethod"
        disabled="false" hidden="false"
        reports="IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD" speed="moderate" />
    <Detector class="edu.umd.cs.findbugs.detect.SynchronizationOnSharedBuiltinConstant"
        hidden="false"
        reports="DL_SYNCHRONIZATION_ON_BOOLEAN,DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE,DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE,DL_SYNCHRONIZATION_ON_SHARED_CONSTANT"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.NoteCheckReturnValueAnnotations" hidden="true"
        reports="" requirejre="1.5" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FieldItemSummary" hidden="true" reports=""
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.NoteNonNullAnnotations" disabled="true"
        hidden="true" reports="" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.NoteUnconditionalParamDerefs"
        reports="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT,NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE"
        speed="slow" />
    <Detector class="edu.umd.cs.findbugs.detect.NoteNonnullReturnValues" disabled="true"
        hidden="true" reports="" speed="slow" />
    <Detector class="edu.umd.cs.findbugs.detect.SynchronizeOnClassLiteralNotGetClass" hidden="false"
        reports="WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.InfiniteRecursiveLoop"
        reports="IL_INFINITE_RECURSIVE_LOOP,IL_CONTAINER_ADDED_TO_ITSELF" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.InfiniteLoop" reports="IL_INFINITE_LOOP"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.VolatileUsage"
        reports="VO_VOLATILE_REFERENCE_TO_ARRAY,VO_VOLATILE_INCREMENT" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.InheritanceUnsafeGetResource"
        reports="UI_INHERITANCE_UNSAFE_GETRESOURCE" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.EmptyZipFileEntry" disabled="true"
        reports="AM_CREATES_EMPTY_ZIP_FILE_ENTRY,AM_CREATES_EMPTY_JAR_FILE_ENTRY"
        speed="moderate" />
    <Detector class="edu.umd.cs.findbugs.detect.DoInsideDoPrivileged"
        reports="DP_DO_INSIDE_DO_PRIVILEGED,DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.HugeSharedStringConstants"
        reports="HSC_HUGE_SHARED_STRING_CONSTANT" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FinalizerNullsFields"
        reports="FI_FINALIZER_NULLS_FIELDS,FI_FINALIZER_ONLY_NULLS_FIELDS" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.MutableEnum"
        reports="ME_MUTABLE_ENUM_FIELD,ME_ENUM_FIELD_SETTER" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.InconsistentAnnotations"
        reports="NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.RepeatedConditionals"
        reports="RpC_REPEATED_CONDITIONAL_TEST" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.RedundantConditions"
        reports="UC_USELESS_CONDITION,UC_USELESS_CONDITION_TYPE" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.CallToUnsupportedMethod" disabled="true"
        reports="DMI_UNSUPPORTED_METHOD" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FormatStringChecker"
        reports="VA_FORMAT_STRING_USES_NEWLINE,VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED,VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED,VA_FORMAT_STRING_ILLEGAL,VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT,VA_FORMAT_STRING_MISSING_ARGUMENT,VA_FORMAT_STRING_BAD_ARGUMENT,VA_FORMAT_STRING_BAD_CONVERSION,VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN,VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.LostLoggerDueToWeakReference"
        reports="LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.TestingGround" disabled="true" hidden="true"
        reports="TESTING" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.TestingGround2" disabled="true" hidden="true"
        reports="TESTING" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.NoiseNullDeref" disabled="true" hidden="true"
        reports="NOISE_NULL_DEREFERENCE" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.Noise" disabled="true" hidden="true"
        reports="NOISE_METHOD_CALL,NOISE_FIELD_REFERENCE,NOISE_OPERATION" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis"
        reports="EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.ResolveAllReferences" disabled="true" hidden="true"
        reports="VR_UNRESOLVABLE_REFERENCE" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.CheckImmutableAnnotation"
        reports="JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.DontCatchIllegalMonitorStateException"
        reports="IMSE_DONT_CATCH_IMSE" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindFloatMath" disabled="true" hidden="true"
        reports="FL_MATH_USING_FLOAT_PRECISION" speed="moderate" />
    <Detector class="edu.umd.cs.findbugs.detect.CloneIdiom"
        reports="CN_IDIOM,CN_IDIOM_NO_SUPER_CALL,CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.ComparatorIdiom"
        reports="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindFieldSelfAssignment"
        reports="SA_FIELD_SELF_ASSIGNMENT,SA_LOCAL_DOUBLE_ASSIGNMENT" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindSelfComparison"
        reports="SA_FIELD_SELF_COMPARISON,SA_LOCAL_SELF_COMPARISON,SA_FIELD_SELF_COMPUTATION,SA_LOCAL_SELF_COMPUTATION,SA_FIELD_DOUBLE_ASSIGNMENT"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindSelfComparison2"
        reports="SA_FIELD_SELF_COMPARISON,SA_LOCAL_SELF_COMPARISON,SA_FIELD_SELF_COMPUTATION,SA_LOCAL_SELF_COMPUTATION"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.DroppedException"
        reports="DE_MIGHT_DROP,DE_MIGHT_IGNORE" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.LoadOfKnownNullValue" disabled="false"
        reports="NP_LOAD_OF_KNOWN_NULL_VALUE" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.DumbMethodInvocations" disabled="false"
        reports="DMI_EMPTY_DB_PASSWORD,DMI_CONSTANT_DB_PASSWORD,DMI_USELESS_SUBSTRING,DMI_HARDCODED_ABSOLUTE_FILENAME"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.URLProblems"
        reports="DMI_BLOCKING_METHODS_ON_URL,DMI_COLLECTION_OF_URLS" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.CovariantArrayAssignment" disabled="true"
        reports="CAA_COVARIANT_ARRAY_FIELD,CAA_COVARIANT_ARRAY_RETURN,CAA_COVARIANT_ARRAY_LOCAL,CAA_COVARIANT_ARRAY_ELEMENT_STORE"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.DumbMethods"
        reports="NP_IMMEDIATE_DEREFERENCE_OF_READLINE,RV_01_TO_INT,DM_INVALID_MIN_MAX,DM_RUN_FINALIZERS_ON_EXIT,DM_STRING_CTOR,DM_STRING_VOID_CTOR,DM_STRING_TOSTRING,DM_GC,DM_BOOLEAN_CTOR,DM_EXIT,DM_CONVERT_CASE,SW_SWING_METHODS_INVOKED_IN_SWING_THREAD,DM_BOXED_PRIMITIVE_TOSTRING,DM_BOXED_PRIMITIVE_FOR_PARSING,DM_BOXED_PRIMITIVE_FOR_COMPARE,DM_NEW_FOR_GETCLASS,DM_NEXTINT_VIA_NEXTDOUBLE,DM_USELESS_THREAD,DM_MONITOR_WAIT_ON_CONDITION,DMI_CALLING_NEXT_FROM_HASNEXT,RV_REM_OF_HASHCODE,RV_REM_OF_RANDOM_INT,RV_ABSOLUTE_VALUE_OF_RANDOM_INT,RV_ABSOLUTE_VALUE_OF_HASHCODE,BIT_ADD_OF_SIGNED_BYTE,BIT_IOR_OF_SIGNED_BYTE,INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE,INT_BAD_COMPARISON_WITH_SIGNED_BYTE,INT_BAD_REM_BY_1,DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION,INT_VACUOUS_COMPARISON,BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS,DMI_RANDOM_USED_ONLY_ONCE,DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT,DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED,DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR,DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS,DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD,DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE,INT_VACUOUS_BIT_OPERATION,DMI_COLLECTION_OF_URLS,INT_BAD_COMPARISON_WITH_INT_VALUE,DMI_DOH,DMI_ARGUMENTS_WRONG_ORDER,RANGE_ARRAY_INDEX,RANGE_ARRAY_OFFSET,RANGE_ARRAY_LENGTH,RANGE_STRING_INDEX"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.NumberConstructor" disabled="false"
        reports="DM_NUMBER_CTOR,DM_FP_NUMBER_CTOR" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindSqlInjection" disabled="false"
        reports="SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING"
        speed="moderate" />
    <Detector class="edu.umd.cs.findbugs.detect.FindDoubleCheck"
        reports="DC_DOUBLECHECK,DC_PARTIALLY_CONSTRUCTED" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindFinalizeInvocations"
        reports="FI_PUBLIC_SHOULD_BE_PROTECTED,FI_EMPTY,FI_NULLIFY_SUPER,FI_USELESS,FI_MISSING_SUPER_CALL,FI_EXPLICIT_INVOCATION"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindHEmismatch"
        reports="EQ_DONT_DEFINE_EQUALS_FOR_ENUM,EQ_SELF_USE_OBJECT,EQ_SELF_NO_OBJECT,CO_SELF_NO_OBJECT,HE_HASHCODE_USE_OBJECT_EQUALS,HE_HASHCODE_NO_EQUALS,HE_EQUALS_USE_HASHCODE,HE_EQUALS_NO_HASHCODE,HE_INHERITS_EQUALS_USE_HASHCODE,CO_ABSTRACT_SELF,EQ_ABSTRACT_SELF,HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS,HE_USE_OF_UNHASHABLE_CLASS,EQ_COMPARETO_USE_OBJECT_EQUALS,EQ_DOESNT_OVERRIDE_EQUALS,EQ_OTHER_USE_OBJECT,EQ_OTHER_NO_OBJECT"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical"
        reports="EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC,EQ_ALWAYS_TRUE,EQ_ALWAYS_FALSE,EQ_COMPARING_CLASS_NAMES,EQ_UNUSUAL,EQ_GETCLASS_AND_CLASS_CONSTANT"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindNakedNotify" reports="NN_NAKED_NOTIFY"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindReturnRef"
        reports="MS_EXPOSE_REP,EI_EXPOSE_REP,EI_EXPOSE_REP2,EI_EXPOSE_STATIC_REP2" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindRunInvocations" reports="RU_INVOKE_RUN"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.SwitchFallthrough"
        reports="SF_SWITCH_FALLTHROUGH,SF_SWITCH_NO_DEFAULT,SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH,SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindSpinLoop" reports="SP_SPIN_ON_FIELD"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindNonShortCircuit"
        reports="NS_NON_SHORT_CIRCUIT,NS_DANGEROUS_NON_SHORT_CIRCUIT" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindTwoLockWait" reports="TLW_TWO_LOCK_WAIT"
        speed="slow" />
    <Detector class="edu.umd.cs.findbugs.detect.FindUnconditionalWait" reports="UW_UNCOND_WAIT"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindUninitializedGet" reports="UR_UNINIT_READ"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.DontUseEnum"
        reports="NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER,NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindUnsyncGet" reports="UG_SYNC_SET_UNSYNC_GET"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.InitializationChain"
        reports="SI_INSTANCE_BEFORE_FINALS_ASSIGNED,IC_INIT_CIRCULARITY" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.IteratorIdioms" reports="IT_NO_SUCH_ELEMENT"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.PreferZeroLengthArrays"
        reports="PZLA_PREFER_ZERO_LENGTH_ARRAYS" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.SynchronizingOnContentsOfFieldToProtectField"
        reports="ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.MutableLock" reports="ML_SYNC_ON_UPDATED_FIELD"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindUselessObjects"
        reports="UC_USELESS_OBJECT,UC_USELESS_OBJECT_STACK" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.MutableStaticFields"
        reports="MS_OOI_PKGPROTECT,MS_FINAL_PKGPROTECT,MS_SHOULD_BE_REFACTORED_TO_BE_FINAL,MS_SHOULD_BE_FINAL,MS_PKGPROTECT,MS_MUTABLE_HASHTABLE,MS_MUTABLE_ARRAY,MS_CANNOT_BE_FINAL,MS_MUTABLE_COLLECTION,MS_MUTABLE_COLLECTION_PKGPROTECT"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.Naming"
        reports="NM_WRONG_PACKAGE,NM_WRONG_PACKAGE_INTENTIONAL,NM_VERY_CONFUSING,NM_VERY_CONFUSING_INTENTIONAL,NM_CONFUSING,NM_METHOD_CONSTRUCTOR_CONFUSION,NM_LCASE_HASHCODE,NM_LCASE_TOSTRING,NM_BAD_EQUAL,NM_CLASS_NAMING_CONVENTION,NM_FIELD_NAMING_CONVENTION,NM_METHOD_NAMING_CONVENTION,NM_CLASS_NOT_EXCEPTION,NM_SAME_SIMPLE_NAME_AS_SUPERCLASS,NM_SAME_SIMPLE_NAME_AS_INTERFACE"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.ReadReturnShouldBeChecked"
        reports="RR_NOT_CHECKED,SR_NOT_CHECKED" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.SerializableIdiom"
        reports="SE_NO_SERIALVERSIONID,SE_METHOD_MUST_BE_PRIVATE,WS_WRITEOBJECT_SYNC,RS_READOBJECT_SYNC,SE_INNER_CLASS,SE_BAD_FIELD,SE_BAD_FIELD_STORE,SE_NONLONG_SERIALVERSIONID,SE_NONSTATIC_SERIALVERSIONID,SE_NONFINAL_SERIALVERSIONID,SE_NO_SUITABLE_CONSTRUCTOR,SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION,SE_READ_RESOLVE_MUST_RETURN_OBJECT,SE_TRANSIENT_FIELD_NOT_RESTORED,SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS,SE_BAD_FIELD_INNER_CLASS,SE_READ_RESOLVE_IS_STATIC,SE_PRIVATE_READ_RESOLVE_NOT_INHERITED"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.StartInConstructor" reports="SC_START_IN_CTOR"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindBadForLoop" reports="QF_QUESTIONABLE_FOR_LOOP"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.ExplicitSerialization" reports="" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.UnreadFields"
        reports="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD,NP_UNWRITTEN_FIELD,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,UWF_NULL_FIELD,UWF_UNWRITTEN_FIELD,SS_SHOULD_BE_STATIC,UUF_UNUSED_FIELD,URF_UNREAD_FIELD,SIC_INNER_SHOULD_BE_STATIC,SIC_INNER_SHOULD_BE_STATIC_ANON,SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS,SIC_THREADLOCAL_DEADLY_EMBRACE,UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD,UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD,URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.WaitInLoop"
        reports="WA_NOT_IN_LOOP,WA_AWAIT_NOT_IN_LOOP,NO_NOTIFY_NOT_NOTIFYALL" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindComparatorProblems"
        reports="CO_COMPARETO_RESULTS_MIN_VALUE,CO_COMPARETO_INCORRECT_FLOATING" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindNullDeref"
        reports="NP_DEREFERENCE_OF_READLINE_VALUE,NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE,NP_TOSTRING_COULD_RETURN_NULL,NP_CLONE_COULD_RETURN_NULL,NP_ALWAYS_NULL_EXCEPTION,NP_ALWAYS_NULL,NP_STORE_INTO_NONNULL_FIELD,NP_NULL_ON_SOME_PATH_EXCEPTION,NP_NULL_ON_SOME_PATH,NP_NULL_PARAM_DEREF_NONVIRTUAL,NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS,NP_NULL_PARAM_DEREF,RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE,RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES,RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE,NP_NONNULL_PARAM_VIOLATION,NP_NONNULL_RETURN_VIOLATION,NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE,NP_GUARANTEED_DEREF,NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH,NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT,NP_ARGUMENT_MIGHT_BE_NULL,NP_CLOSING_NULL"
        speed="slow" />
    <Detector class="edu.umd.cs.findbugs.detect.FindNullDerefsInvolvingNonShortCircuitEvaluation"
        reports="NP_NULL_ON_SOME_PATH,NP_GUARANTEED_DEREF" speed="slow" />
    <Detector class="edu.umd.cs.findbugs.detect.FindOpenStream"
        reports="OS_OPEN_STREAM,OS_OPEN_STREAM_EXCEPTION_PATH,ODR_OPEN_DATABASE_RESOURCE,ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH"
        speed="slow" />
    <Detector class="edu.umd.cs.findbugs.detect.FindUselessControlFlow"
        reports="UCF_USELESS_CONTROL_FLOW,UCF_USELESS_CONTROL_FLOW_NEXT_LINE" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindUnreleasedLock"
        reports="UL_UNRELEASED_LOCK,UL_UNRELEASED_LOCK_EXCEPTION_PATH" requirejre="1.5"
        speed="moderate" />
    <Detector class="edu.umd.cs.findbugs.detect.FindRefComparison"
        reports="ES_COMPARING_STRINGS_WITH_EQ,ES_COMPARING_PARAMETER_STRING_WITH_EQ,RC_REF_COMPARISON,RC_REF_COMPARISON_BAD_PRACTICE,RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN,EC_UNRELATED_TYPES,EC_NULL_ARG,EC_UNRELATED_CLASS_AND_INTERFACE,EC_UNRELATED_INTERFACES,EC_ARRAY_AND_NONARRAY,EC_INCOMPATIBLE_ARRAY_COMPARE,EC_BAD_ARRAY_COMPARE,EC_UNRELATED_TYPES_USING_POINTER_EQUALITY,DMI_DOH"
        speed="slow" />
    <Detector class="edu.umd.cs.findbugs.detect.FindMismatchedWaitOrNotify"
        reports="MWN_MISMATCHED_WAIT,MWN_MISMATCHED_NOTIFY" speed="moderate" />
    <Detector class="edu.umd.cs.findbugs.detect.FindEmptySynchronizedBlock"
        reports="ESync_EMPTY_SYNC" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindInconsistentSync2"
        reports="IS2_INCONSISTENT_SYNC,IS_FIELD_NOT_GUARDED,MSF_MUTABLE_SERVLET_FIELD"
        speed="slow" />
    <Detector class="edu.umd.cs.findbugs.detect.FindLocalSelfAssignment2"
        reports="SA_LOCAL_SELF_ASSIGNMENT,SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.IncompatMask"
        reports="BIT_AND,BIT_AND_ZZ,BIT_IOR,BIT_SIGNED_CHECK,BIT_SIGNED_CHECK_HIGH_BIT"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.LazyInit" disabled="false"
        reports="LI_LAZY_INIT_STATIC,LI_LAZY_INIT_UPDATE_STATIC" speed="moderate" />
    <Detector class="edu.umd.cs.findbugs.detect.FindJSR166LockMonitorenter"
        reports="JLM_JSR166_LOCK_MONITORENTER,JLM_JSR166_UTILCONCURRENT_MONITORENTER,JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT"
        requirejre="1.5" speed="moderate" />
    <Detector class="edu.umd.cs.findbugs.detect.FindUncalledPrivateMethods"
        reports="UPM_UNCALLED_PRIVATE_METHOD" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.UncallableMethodOfAnonymousClass"
        reports="UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.StringConcatenation"
        reports="SBSC_USE_STRINGBUFFER_CONCATENATION" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.InefficientInitializationInsideLoop" disabled="true"
        reports="IIL_PREPARE_STATEMENT_IN_LOOP,IIL_PATTERN_COMPILE_IN_LOOP,IIL_PATTERN_COMPILE_IN_LOOP_INDIRECT,IIL_ELEMENTS_GET_LENGTH_IN_LOOP"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.InefficientIndexOf" disabled="true"
        reports="IIO_INEFFICIENT_INDEX_OF,IIO_INEFFICIENT_LAST_INDEX_OF" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.InefficientToArray" disabled="true"
        reports="ITA_INEFFICIENT_TO_ARRAY" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.InvalidJUnitTest"
        reports="IJU_SETUP_NO_SUPER,IJU_TEARDOWN_NO_SUPER,IJU_SUITE_NOT_STATIC,IJU_NO_TESTS,IJU_BAD_SUITE_METHOD"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.BadlyOverriddenAdapter"
        reports="BOA_BADLY_OVERRIDDEN_ADAPTER" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.BadResultSetAccess"
        reports="SQL_BAD_RESULTSET_ACCESS,SQL_BAD_PREPARED_STATEMENT_ACCESS" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.SuperfluousInstanceOf"
        reports="SIO_SUPERFLUOUS_INSTANCEOF" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.BadAppletConstructor" disabled="true"
        reports="BAC_BAD_APPLET_CONSTRUCTOR" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.SuspiciousThreadInterrupted"
        reports="STI_INTERRUPTED_ON_CURRENTTHREAD,STI_INTERRUPTED_ON_UNKNOWNTHREAD" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindDeadLocalStores"
        reports="DLS_DEAD_LOCAL_STORE,IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN,DLS_DEAD_LOCAL_STORE_OF_NULL,DLS_DEAD_STORE_OF_CLASS_LITERAL,DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD,DLS_DEAD_LOCAL_INCREMENT_IN_RETURN"
        speed="moderate" />
    <Detector class="edu.umd.cs.findbugs.detect.FindMaskedFields"
        reports="MF_METHOD_MASKS_FIELD,MF_CLASS_MASKS_FIELD" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.WrongMapIterator" reports="WMI_WRONG_MAP_ITERATOR"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.InstantiateStaticClass"
        reports="ISC_INSTANTIATE_STATIC_CLASS" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.RuntimeExceptionCapture"
        reports="REC_CATCH_EXCEPTION" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindFloatEquality"
        reports="FE_FLOATING_POINT_EQUALITY,FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindUnsatisfiedObligation"
        reports="OBL_UNSATISFIED_OBLIGATION,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE"
        speed="slow" />
    <Detector class="edu.umd.cs.findbugs.detect.UnnecessaryMath" reports="UM_UNNECESSARY_MATH"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindCircularDependencies" disabled="true"
        reports="CD_CIRCULAR_DEPENDENCY" speed="moderate" />
    <Detector class="edu.umd.cs.findbugs.detect.RedundantInterfaces"
        reports="RI_REDUNDANT_INTERFACES" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.MultithreadedInstanceAccess"
        reports="MTIA_SUSPECT_STRUTS_INSTANCE_FIELD,MTIA_SUSPECT_SERVLET_INSTANCE_FIELD"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.PublicSemaphores" disabled="true"
        reports="PS_PUBLIC_SEMAPHORES" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.BadUseOfReturnValue"
        reports="RV_CHECK_FOR_POSITIVE_INDEXOF,RV_DONT_JUST_NULL_CHECK_READLINE" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.MethodReturnCheck"
        reports="RV_RETURN_VALUE_IGNORED,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,RV_EXCEPTION_NOT_THROWN,RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE,RV_RETURN_VALUE_IGNORED_INFERRED,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,UC_USELESS_VOID_METHOD"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.IDivResultCastToDouble"
        reports="ICAST_IDIV_CAST_TO_DOUBLE,ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL,ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindBadCast2"
        reports="BC_BAD_CAST_TO_CONCRETE_COLLECTION,BC_BAD_CAST_TO_ABSTRACT_COLLECTION,BC_UNCONFIRMED_CAST,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,BC_IMPOSSIBLE_CAST,BC_IMPOSSIBLE_INSTANCEOF,BC_VACUOUS_INSTANCEOF,NP_NULL_INSTANCEOF,BC_IMPOSSIBLE_DOWNCAST,BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY"
        speed="fast" />

    <Detector class="edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue"
        reports="J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION,DMI_NONSERIALIZABLE_OBJECT_WRITTEN"
        speed="fast" />

    <Detector class="edu.umd.cs.findbugs.detect.FindNonSerializableStoreIntoSession" disabled="true"
        hidden="true" reports="J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindNonSerializableValuePassedToWriteObject"
        disabled="true" hidden="true" reports="DMI_NONSERIALIZABLE_OBJECT_WRITTEN" speed="fast" />

    <Detector class="edu.umd.cs.findbugs.detect.BadSyntaxForRegularExpression"
        reports="RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION,RE_POSSIBLE_UNINTENDED_PATTERN,RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.VarArgsProblems"
        reports="VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindPuzzlers"
        reports="DLS_DEAD_LOCAL_STORE_IN_RETURN,EC_BAD_ARRAY_COMPARE,DLS_OVERWRITTEN_INCREMENT,ICAST_BAD_SHIFT_AMOUNT,BSHIFT_WRONG_ADD_PRIORITY,ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT,DMI_BAD_MONTH,IM_MULTIPLYING_RESULT_OF_IREM,IM_BAD_CHECK_FOR_ODD,DMI_INVOKING_TOSTRING_ON_ARRAY,DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY,IM_AVERAGE_COMPUTATION_COULD_OVERFLOW,IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR,BX_BOXING_IMMEDIATELY_UNBOXED,BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION,IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD,DMI_INVOKING_HASHCODE_ON_ARRAY,BX_UNBOXING_IMMEDIATELY_REBOXED,RV_NEGATING_RESULT_OF_COMPARETO,DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS,PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.IntCast2LongAsInstant"
        reports="ICAST_INT_2_LONG_AS_INSTANT" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindSleepWithLockHeld"
        reports="SWL_SLEEP_WITH_LOCK_HELD" speed="slow" />
    <Detector class="edu.umd.cs.findbugs.detect.InefficientMemberAccess" disabled="true"
        reports="IMA_INEFFICIENT_MEMBER_ACCESS" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.DuplicateBranches"
        reports="DB_DUPLICATE_BRANCHES,DB_DUPLICATE_SWITCH_CLAUSES" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.XMLFactoryBypass" reports="XFB_XML_FACTORY_BYPASS"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.UselessSubclassMethod" disabled="true"
        reports="USM_USELESS_SUBCLASS_METHOD,USM_USELESS_ABSTRACT_METHOD" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.ConfusedInheritance"
        reports="CI_CONFUSED_INHERITANCE" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.QuestionableBooleanAssignment"
        reports="QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.TrainUnconditionalDerefParams" hidden="true"
        reports="" speed="slow" />
    <Detector class="edu.umd.cs.findbugs.detect.TrainLongInstantfParams" hidden="true" reports=""
        speed="slow" />
    <Detector class="edu.umd.cs.findbugs.detect.TrainFieldStoreTypes" hidden="true" reports=""
        speed="slow" />
    <Detector class="edu.umd.cs.findbugs.detect.TrainNonNullAnnotations" hidden="true" reports=""
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.CheckCalls" disabled="true" hidden="true" reports=""
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindBugsSummaryStats" hidden="true" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.AppendingToAnObjectOutputStream"
        reports="IO_APPENDING_TO_OBJECT_OUTPUT_STREAM" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.TestASM" disabled="true" hidden="true"
        reports="TESTING" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.FindUnrelatedTypesInGenericContainer"
        reports="GC_UNRELATED_TYPES,DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES,DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION,DMI_VACUOUS_SELF_COLLECTION_CALL,GC_UNCHECKED_TYPE_IN_GENERIC_CALL"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.StaticCalendarDetector"
        reports="STCAL_STATIC_CALENDAR_INSTANCE,STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE,STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE,STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE"
        speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.TestDataflowAnalysis" disabled="true" hidden="true"
        reports="" speed="slow" />
    <Detector class="edu.umd.cs.findbugs.detect.CheckTypeQualifiers"
        reports="TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED,TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED,TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK,TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK,TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK,TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK,TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS,TQ_UNKNOWN_VALUE_USED_WHERE_ALWAYS_STRICTLY_REQUIRED"
        speed="slow" />

    <Detector class="edu.umd.cs.findbugs.detect.CrossSiteScripting"
        reports="HRS_REQUEST_PARAMETER_TO_HTTP_HEADER,HRS_REQUEST_PARAMETER_TO_COOKIE,XSS_REQUEST_PARAMETER_TO_JSP_WRITER,XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER,XSS_REQUEST_PARAMETER_TO_SEND_ERROR,PT_ABSOLUTE_PATH_TRAVERSAL,PT_RELATIVE_PATH_TRAVERSAL" />
    <Detector class="edu.umd.cs.findbugs.detect.DontIgnoreResultOfPutIfAbsent"
        reports="RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED" />
    <Detector
        class="edu.umd.cs.findbugs.detect.ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass"
        reports="UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR" />
    <Detector class="edu.umd.cs.findbugs.detect.AtomicityProblem"
        reports="AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION" />
    <Detector class="edu.umd.cs.findbugs.detect.CheckExpectedWarnings" disabled="true"
        hidden="false" reports="FB_UNEXPECTED_WARNING,FB_MISSING_EXPECTED_WARNING" />
    <Detector class="edu.umd.cs.findbugs.detect.DefaultEncodingDetector"
        reports="DM_DEFAULT_ENCODING" speed="fast" />
    <Detector class="edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation"
        reports="NP_METHOD_RETURN_RELAXING_ANNOTATION,NP_METHOD_PARAMETER_TIGHTENS_ANNOTATION"
        speed="fast" />

    <!-- Bug Categories -->
    <BugCategory category="NOISE" hidden="true" />

    <!-- Bug Codes -->
    <BugCode abbrev="USELESS_STRING" />
    <BugCode abbrev="DMI" cweid="440" />
    <BugCode abbrev="CN" cweid="580" />
    <BugCode abbrev="DLS" cweid="563" />
    <BugCode abbrev="RV" cweid="440" />
    <BugCode abbrev="IS" cweid="366" />
    <BugCode abbrev="NP" cweid="476" />
    <BugCode abbrev="RCN" cweid="476" />
    <BugCode abbrev="EQ" cweid="595" />
    <BugCode abbrev="ES" cweid="597" />
    <BugCode abbrev="FI" cweid="586" />
    <BugCode abbrev="AM" cweid="227" />
    <BugCode abbrev="J2EE" cweid="4" />
    <BugCode abbrev="RE" cweid="185" />
    <BugCode abbrev="MS" cweid="218" />
    <BugCode abbrev="DE" cweid="391" />
    <BugCode abbrev="XSS" cweid="79" />
    <BugCode abbrev="HRS" cweid="113" />
    <BugCode abbrev="STCAL" cweid="366" />
    <BugCode abbrev="ICAST" cweid="192" />
    <BugCode abbrev="FB" />
    <BugCode abbrev="AT" />
    <!-- Bug patterns -->
    <BugPattern abbrev="CNT" category="BAD_PRACTICE" type="CNT_ROUGH_CONSTANT_VALUE" />

    <BugPattern abbrev="AT" category="MT_CORRECTNESS"
        type="AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION" />
    <BugPattern abbrev="XSS" category="SECURITY" cweid="81"
        type="XSS_REQUEST_PARAMETER_TO_SEND_ERROR" />
    <BugPattern abbrev="SKIPPED" category="EXPERIMENTAL" type="SKIPPED_CLASS_TOO_BIG" />
    <BugPattern abbrev="XSS" category="SECURITY" type="XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER" />
    <BugPattern abbrev="XSS" category="SECURITY" type="XSS_REQUEST_PARAMETER_TO_JSP_WRITER" />
    <BugPattern abbrev="HRS" category="SECURITY" cweid="113"
        type="HRS_REQUEST_PARAMETER_TO_HTTP_HEADER" />
    <BugPattern abbrev="HRS" category="SECURITY" cweid="113"
        type="HRS_REQUEST_PARAMETER_TO_COOKIE" />
    <BugPattern abbrev="PT" category="SECURITY" cweid="36" type="PT_ABSOLUTE_PATH_TRAVERSAL" />
    <BugPattern abbrev="PT" category="SECURITY" cweid="23" type="PT_RELATIVE_PATH_TRAVERSAL" />
    <BugPattern abbrev="STCAL" category="MT_CORRECTNESS" type="STCAL_STATIC_CALENDAR_INSTANCE" />
    <BugPattern abbrev="STCAL" category="MT_CORRECTNESS"
        type="STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE" />
    <BugPattern abbrev="STCAL" category="MT_CORRECTNESS"
        type="STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE" />
    <BugPattern abbrev="STCAL" category="MT_CORRECTNESS"
        type="STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE" />
    <BugPattern abbrev="NP" category="MT_CORRECTNESS" cweid="585"
        type="NP_SYNC_AND_NULL_CHECK_FIELD" />
    <BugPattern abbrev="NP" category="BAD_PRACTICE" type="NP_BOOLEAN_RETURN_NULL" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_OPTIONAL_RETURN_NULL" />
    <BugPattern abbrev="NP" category="CORRECTNESS"
        type="NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR" />
    <BugPattern abbrev="VR" category="CORRECTNESS" experimental="true"
        type="VR_UNRESOLVABLE_REFERENCE" />
    <BugPattern abbrev="SW" category="BAD_PRACTICE"
        type="SW_SWING_METHODS_INVOKED_IN_SWING_THREAD" />
    <BugPattern abbrev="IL" category="CORRECTNESS" type="IL_INFINITE_LOOP" />
    <BugPattern abbrev="IO" category="CORRECTNESS" type="IO_APPENDING_TO_OBJECT_OUTPUT_STREAM" />
    <BugPattern abbrev="IL" category="CORRECTNESS" cweid="674" type="IL_INFINITE_RECURSIVE_LOOP" />
    <BugPattern abbrev="FI" category="BAD_PRACTICE" type="FI_FINALIZER_ONLY_NULLS_FIELDS" />
    <BugPattern abbrev="FI" category="BAD_PRACTICE" type="FI_FINALIZER_NULLS_FIELDS" />
    <BugPattern abbrev="IL" category="CORRECTNESS" type="IL_CONTAINER_ADDED_TO_ITSELF" />
    <BugPattern abbrev="VO" category="MT_CORRECTNESS" type="VO_VOLATILE_REFERENCE_TO_ARRAY" />
    <BugPattern abbrev="VO" category="MT_CORRECTNESS" type="VO_VOLATILE_INCREMENT" />
    <BugPattern abbrev="UI" category="BAD_PRACTICE" type="UI_INHERITANCE_UNSAFE_GETRESOURCE" />
    <BugPattern abbrev="HSC" category="PERFORMANCE" type="HSC_HUGE_SHARED_STRING_CONSTANT" />
    <BugPattern abbrev="RpC" category="CORRECTNESS" type="RpC_REPEATED_CONDITIONAL_TEST" />
    <BugPattern abbrev="NOISE" category="NOISE" type="NOISE_NULL_DEREFERENCE" />
    <BugPattern abbrev="NOISE" category="NOISE" type="NOISE_METHOD_CALL" />
    <BugPattern abbrev="NOISE" category="NOISE" type="NOISE_FIELD_REFERENCE" />
    <BugPattern abbrev="NOISE" category="NOISE" type="NOISE_OPERATION" />
    <BugPattern abbrev="TEST" category="EXPERIMENTAL" type="UNKNOWN" />
    <BugPattern abbrev="TEST" category="EXPERIMENTAL" type="TESTING" />
    <BugPattern abbrev="TEST" category="EXPERIMENTAL" type="TESTING1" />
    <BugPattern abbrev="TEST" category="EXPERIMENTAL" type="TESTING2" />
    <BugPattern abbrev="TEST" category="EXPERIMENTAL" type="TESTING3" />
    <BugPattern abbrev="AM" category="BAD_PRACTICE" type="AM_CREATES_EMPTY_ZIP_FILE_ENTRY" />
    <BugPattern abbrev="AM" category="BAD_PRACTICE" type="AM_CREATES_EMPTY_JAR_FILE_ENTRY" />
    <BugPattern abbrev="DP" category="MALICIOUS_CODE" type="DP_DO_INSIDE_DO_PRIVILEGED" />
    <BugPattern abbrev="DP" category="MALICIOUS_CODE"
        type="DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED" />
    <BugPattern abbrev="IMSE" category="BAD_PRACTICE" type="IMSE_DONT_CATCH_IMSE" />
    <BugPattern abbrev="FL" category="CORRECTNESS" type="FL_MATH_USING_FLOAT_PRECISION" />
    <BugPattern abbrev="CAA" category="STYLE" experimental="true"
        type="CAA_COVARIANT_ARRAY_FIELD" />
    <BugPattern abbrev="CAA" category="STYLE" experimental="true"
        type="CAA_COVARIANT_ARRAY_RETURN" />
    <BugPattern abbrev="CAA" category="STYLE" experimental="true"
        type="CAA_COVARIANT_ARRAY_LOCAL" />
    <BugPattern abbrev="CAA" category="CORRECTNESS" experimental="true"
        type="CAA_COVARIANT_ARRAY_ELEMENT_STORE" />
    <BugPattern abbrev="CN" category="BAD_PRACTICE" type="CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE" />
    <BugPattern abbrev="CN" category="BAD_PRACTICE" type="CN_IDIOM" />
    <BugPattern abbrev="CN" category="BAD_PRACTICE" type="CN_IDIOM_NO_SUPER_CALL" />
    <BugPattern abbrev="DE" category="BAD_PRACTICE" type="DE_MIGHT_DROP" />
    <BugPattern abbrev="DE" category="BAD_PRACTICE" type="DE_MIGHT_IGNORE" />
    <BugPattern abbrev="Dm" category="BAD_PRACTICE" cweid="382" type="DM_EXIT" />
    <BugPattern abbrev="Nm" category="BAD_PRACTICE" type="NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER" />
    <BugPattern abbrev="Nm" category="BAD_PRACTICE"
        type="NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER" />
    <BugPattern abbrev="JCIP" category="BAD_PRACTICE"
        type="JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS" />
    <BugPattern abbrev="Dm" category="CORRECTNESS" type="DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD" />
    <BugPattern abbrev="Dm" category="CORRECTNESS"
        type="DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR" />
    <BugPattern abbrev="DMI" category="CORRECTNESS" type="DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE" />
    <BugPattern abbrev="Dm" category="CORRECTNESS"
        type="DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS" />
    <BugPattern abbrev="Dm" category="SECURITY" cweid="259" type="DMI_CONSTANT_DB_PASSWORD" />
    <BugPattern abbrev="Dm" category="SECURITY" cweid="259" type="DMI_EMPTY_DB_PASSWORD" />
    <BugPattern abbrev="Dm" category="STYLE" type="DMI_UNSUPPORTED_METHOD" />
    <BugPattern abbrev="Dm" category="STYLE" type="DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED" />
    <BugPattern abbrev="Dm" category="PERFORMANCE" type="DMI_BLOCKING_METHODS_ON_URL" />
    <BugPattern abbrev="Dm" category="PERFORMANCE" type="DMI_COLLECTION_OF_URLS" />
    <BugPattern abbrev="Dm" category="CORRECTNESS"
        type="DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION" />
    <BugPattern abbrev="Dm" category="BAD_PRACTICE" type="DM_RUN_FINALIZERS_ON_EXIT" />
    <BugPattern abbrev="Dm" category="PERFORMANCE" type="DM_STRING_CTOR" />
    <BugPattern abbrev="Dm" category="PERFORMANCE" type="DM_STRING_VOID_CTOR" />
    <BugPattern abbrev="Dm" category="PERFORMANCE" type="DM_STRING_TOSTRING" />
    <BugPattern abbrev="Dm" category="PERFORMANCE" type="DM_GC" />
    <BugPattern abbrev="Dm" category="PERFORMANCE" type="DM_BOOLEAN_CTOR" />
    <BugPattern abbrev="Bx" category="PERFORMANCE" type="DM_NUMBER_CTOR" />
    <BugPattern abbrev="Bx" category="PERFORMANCE" type="DM_FP_NUMBER_CTOR" />
    <BugPattern abbrev="Dm" category="I18N" type="DM_CONVERT_CASE" />
    <BugPattern abbrev="Bx" category="PERFORMANCE" type="DM_BOXED_PRIMITIVE_TOSTRING" />
    <BugPattern abbrev="Bx" category="PERFORMANCE" type="DM_BOXED_PRIMITIVE_FOR_PARSING" />
    <BugPattern abbrev="Bx" category="PERFORMANCE" type="DM_BOXED_PRIMITIVE_FOR_COMPARE" />
    <BugPattern abbrev="Bx" category="PERFORMANCE"
        type="BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR" />
    <BugPattern abbrev="Bx" category="PERFORMANCE" type="BX_UNBOXING_IMMEDIATELY_REBOXED" />
    <BugPattern abbrev="Bx" category="PERFORMANCE" type="BX_BOXING_IMMEDIATELY_UNBOXED" />
    <BugPattern abbrev="Bx" category="PERFORMANCE" cweid="192"
        type="BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION" />
    <BugPattern abbrev="Dm" category="PERFORMANCE" type="DM_NEW_FOR_GETCLASS" />
    <BugPattern abbrev="Dm" category="MT_CORRECTNESS" type="DM_MONITOR_WAIT_ON_CONDITION" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_ARGUMENT_MIGHT_BE_NULL" />
    <BugPattern abbrev="NP" category="BAD_PRACTICE" type="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT" />
    <BugPattern abbrev="NP" category="STYLE" type="NP_DEREFERENCE_OF_READLINE_VALUE" />
    <BugPattern abbrev="NP" category="STYLE" type="NP_IMMEDIATE_DEREFERENCE_OF_READLINE" />
    <BugPattern abbrev="RV" category="CORRECTNESS" type="RV_ABSOLUTE_VALUE_OF_RANDOM_INT" />
    <BugPattern abbrev="RV" category="CORRECTNESS" type="RV_ABSOLUTE_VALUE_OF_HASHCODE" />
    <BugPattern abbrev="RV" category="STYLE" type="RV_REM_OF_RANDOM_INT" />
    <BugPattern abbrev="RV" category="STYLE" type="RV_REM_OF_HASHCODE" />
    <BugPattern abbrev="RV" category="CORRECTNESS" type="RV_01_TO_INT" />
    <BugPattern abbrev="Dm" category="CORRECTNESS" type="DM_INVALID_MIN_MAX" />
    <BugPattern abbrev="Dm" category="PERFORMANCE" type="DM_NEXTINT_VIA_NEXTDOUBLE" />
    <BugPattern abbrev="Dm" category="MT_CORRECTNESS" type="DM_USELESS_THREAD" />
    <BugPattern abbrev="SQL" category="SECURITY" cweid="89"
        type="SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE" />
    <BugPattern abbrev="SQL" category="SECURITY" cweid="89"
        type="SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING" />
    <BugPattern abbrev="DC" category="MT_CORRECTNESS" cweid="609" type="DC_DOUBLECHECK" />
    <BugPattern abbrev="DC" category="MT_CORRECTNESS" cweid="609" type="DC_PARTIALLY_CONSTRUCTED" />
    <BugPattern abbrev="FI" category="MALICIOUS_CODE" cweid="583"
        type="FI_PUBLIC_SHOULD_BE_PROTECTED" />
    <BugPattern abbrev="FI" category="BAD_PRACTICE" type="FI_EMPTY" />
    <BugPattern abbrev="FI" category="BAD_PRACTICE" type="FI_NULLIFY_SUPER" />
    <BugPattern abbrev="FI" category="BAD_PRACTICE" type="FI_USELESS" />
    <BugPattern abbrev="FI" category="BAD_PRACTICE" type="FI_MISSING_SUPER_CALL" />
    <BugPattern abbrev="FI" category="BAD_PRACTICE" cweid="586" type="FI_EXPLICIT_INVOCATION" />
    <BugPattern abbrev="Eq" category="BAD_PRACTICE"
        type="EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS" />
    <BugPattern abbrev="Eq" category="CORRECTNESS" type="EQ_COMPARING_CLASS_NAMES" />
    <BugPattern abbrev="Eq" category="STYLE" type="EQ_UNUSUAL" />
    <BugPattern abbrev="Eq" category="BAD_PRACTICE" type="EQ_GETCLASS_AND_CLASS_CONSTANT" />
    <BugPattern abbrev="Eq" category="CORRECTNESS" type="EQ_ALWAYS_TRUE" />
    <BugPattern abbrev="Eq" category="CORRECTNESS" type="EQ_ALWAYS_FALSE" />
    <BugPattern abbrev="Eq" category="CORRECTNESS" type="EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC" />
    <BugPattern abbrev="Eq" category="STYLE" type="EQ_DOESNT_OVERRIDE_EQUALS" />
    <BugPattern abbrev="Eq" category="CORRECTNESS" type="EQ_DONT_DEFINE_EQUALS_FOR_ENUM" />
    <BugPattern abbrev="Eq" category="CORRECTNESS" type="EQ_SELF_USE_OBJECT" />
    <BugPattern abbrev="Eq" category="CORRECTNESS" type="EQ_OTHER_USE_OBJECT" />
    <BugPattern abbrev="Eq" category="CORRECTNESS" type="EQ_OTHER_NO_OBJECT" />
    <BugPattern abbrev="Eq" category="BAD_PRACTICE" type="EQ_SELF_NO_OBJECT" />
    <BugPattern abbrev="Co" category="BAD_PRACTICE" type="CO_SELF_NO_OBJECT" />
    <BugPattern abbrev="Co" category="BAD_PRACTICE" type="CO_COMPARETO_RESULTS_MIN_VALUE" />
    <BugPattern abbrev="Co" category="BAD_PRACTICE" type="CO_COMPARETO_INCORRECT_FLOATING" />
    <BugPattern abbrev="RV" category="BAD_PRACTICE" type="RV_NEGATING_RESULT_OF_COMPARETO" />
    <BugPattern abbrev="ES" category="BAD_PRACTICE" type="ES_COMPARING_STRINGS_WITH_EQ" />
    <BugPattern abbrev="ES" category="BAD_PRACTICE" type="ES_COMPARING_PARAMETER_STRING_WITH_EQ" />
    <BugPattern abbrev="HE" category="CORRECTNESS"
        type="HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS" />
    <BugPattern abbrev="HE" category="CORRECTNESS" type="HE_USE_OF_UNHASHABLE_CLASS" />
    <BugPattern abbrev="Eq" category="BAD_PRACTICE" type="EQ_COMPARETO_USE_OBJECT_EQUALS" />
    <BugPattern abbrev="HE" category="BAD_PRACTICE" type="HE_HASHCODE_USE_OBJECT_EQUALS" />
    <BugPattern abbrev="HE" category="BAD_PRACTICE" type="HE_HASHCODE_NO_EQUALS" />
    <BugPattern abbrev="HE" category="BAD_PRACTICE" type="HE_EQUALS_USE_HASHCODE" />
    <BugPattern abbrev="HE" category="BAD_PRACTICE" type="HE_INHERITS_EQUALS_USE_HASHCODE" />
    <BugPattern abbrev="HE" category="BAD_PRACTICE" type="HE_EQUALS_NO_HASHCODE" />
    <BugPattern abbrev="Eq" category="BAD_PRACTICE" type="EQ_ABSTRACT_SELF" />
    <BugPattern abbrev="Co" category="BAD_PRACTICE" type="CO_ABSTRACT_SELF" />
    <BugPattern abbrev="DL" category="MT_CORRECTNESS"
        type="DL_SYNCHRONIZATION_ON_SHARED_CONSTANT" />
    <BugPattern abbrev="DL" category="MT_CORRECTNESS" type="DL_SYNCHRONIZATION_ON_BOOLEAN" />
    <BugPattern abbrev="DL" category="MT_CORRECTNESS"
        type="DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE" />
    <BugPattern abbrev="DL" category="MT_CORRECTNESS"
        type="DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE" />
    <BugPattern abbrev="WL" category="MT_CORRECTNESS"
        type="WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL" />
    <BugPattern abbrev="ESync" category="MT_CORRECTNESS" cweid="585" type="ESync_EMPTY_SYNC" />
    <BugPattern abbrev="MSF" category="MT_CORRECTNESS" type="MSF_MUTABLE_SERVLET_FIELD" />
    <BugPattern abbrev="IS" category="MT_CORRECTNESS" type="IS2_INCONSISTENT_SYNC" />
    <BugPattern abbrev="NN" category="MT_CORRECTNESS" type="NN_NAKED_NOTIFY" />
    <BugPattern abbrev="MS" category="MALICIOUS_CODE" type="MS_EXPOSE_REP" />
    <BugPattern abbrev="EI" category="MALICIOUS_CODE" cweid="374" type="EI_EXPOSE_REP" />
    <BugPattern abbrev="EI2" category="MALICIOUS_CODE" cweid="374" type="EI_EXPOSE_REP2" />
    <BugPattern abbrev="MS" category="MALICIOUS_CODE" type="EI_EXPOSE_STATIC_REP2" />
    <BugPattern abbrev="Ru" category="MT_CORRECTNESS" cweid="572" type="RU_INVOKE_RUN" />
    <BugPattern abbrev="SP" category="MT_CORRECTNESS" type="SP_SPIN_ON_FIELD" />
    <BugPattern abbrev="NS" category="STYLE" type="NS_NON_SHORT_CIRCUIT" />
    <BugPattern abbrev="NS" category="STYLE" type="NS_DANGEROUS_NON_SHORT_CIRCUIT" />
    <BugPattern abbrev="TLW" category="MT_CORRECTNESS" type="TLW_TWO_LOCK_WAIT" />
    <BugPattern abbrev="TLW" category="MT_CORRECTNESS" deprecated="true" experimental="true"
        type="TLW_TWO_LOCK_NOTIFY" />
    <!-- has never been generated -->
    <BugPattern abbrev="UW" category="MT_CORRECTNESS" type="UW_UNCOND_WAIT" />
    <BugPattern abbrev="UR" category="CORRECTNESS" type="UR_UNINIT_READ" />
    <BugPattern abbrev="UR" category="CORRECTNESS"
        type="UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR" />
    <BugPattern abbrev="UG" category="MT_CORRECTNESS" type="UG_SYNC_SET_UNSYNC_GET" />
    <BugPattern abbrev="IC" category="STYLE" type="IC_INIT_CIRCULARITY" />
    <BugPattern abbrev="IC" category="BAD_PRACTICE"
        type="IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION" />
    <BugPattern abbrev="SI" category="BAD_PRACTICE" type="SI_INSTANCE_BEFORE_FINALS_ASSIGNED" />
    <BugPattern abbrev="It" category="BAD_PRACTICE" type="IT_NO_SUCH_ELEMENT" />
    <BugPattern abbrev="IS" category="MT_CORRECTNESS" deprecated="true"
        type="IS_INCONSISTENT_SYNC" />
    <BugPattern abbrev="IS" category="MT_CORRECTNESS" type="IS_FIELD_NOT_GUARDED" />
    <BugPattern abbrev="ML" category="MT_CORRECTNESS"
        type="ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD" />
    <BugPattern abbrev="ML" category="MT_CORRECTNESS" type="ML_SYNC_ON_UPDATED_FIELD" />
    <BugPattern abbrev="MS" category="MALICIOUS_CODE" type="MS_OOI_PKGPROTECT" />
    <BugPattern abbrev="MS" category="MALICIOUS_CODE" type="MS_FINAL_PKGPROTECT" />
    <BugPattern abbrev="MS" category="MALICIOUS_CODE" type="MS_SHOULD_BE_FINAL" />
    <BugPattern abbrev="MS" category="MALICIOUS_CODE" type="MS_SHOULD_BE_REFACTORED_TO_BE_FINAL" />
    <BugPattern abbrev="MS" category="MALICIOUS_CODE" type="MS_PKGPROTECT" />
    <BugPattern abbrev="MS" category="MALICIOUS_CODE" type="MS_MUTABLE_HASHTABLE" />
    <BugPattern abbrev="MS" category="MALICIOUS_CODE" type="MS_MUTABLE_ARRAY" />
    <BugPattern abbrev="MS" category="MALICIOUS_CODE" type="MS_MUTABLE_COLLECTION" />
    <BugPattern abbrev="MS" category="MALICIOUS_CODE" type="MS_MUTABLE_COLLECTION_PKGPROTECT" />
    <BugPattern abbrev="MS" category="MALICIOUS_CODE" type="MS_CANNOT_BE_FINAL" />
    <BugPattern abbrev="ME" category="BAD_PRACTICE" type="ME_MUTABLE_ENUM_FIELD" />
    <BugPattern abbrev="ME" category="BAD_PRACTICE" type="ME_ENUM_FIELD_SETTER" />
    <BugPattern abbrev="Nm" category="BAD_PRACTICE" type="NM_METHOD_NAMING_CONVENTION" />
    <BugPattern abbrev="Nm" category="BAD_PRACTICE" type="NM_FIELD_NAMING_CONVENTION" />
    <BugPattern abbrev="Nm" category="BAD_PRACTICE" type="NM_SAME_SIMPLE_NAME_AS_INTERFACE" />
    <BugPattern abbrev="Nm" category="BAD_PRACTICE" type="NM_SAME_SIMPLE_NAME_AS_SUPERCLASS" />
    <BugPattern abbrev="Nm" category="BAD_PRACTICE" type="NM_CLASS_NAMING_CONVENTION" />
    <BugPattern abbrev="Nm" category="CORRECTNESS" type="NM_VERY_CONFUSING" />
    <BugPattern abbrev="Nm" category="BAD_PRACTICE" type="NM_VERY_CONFUSING_INTENTIONAL" />
    <BugPattern abbrev="Nm" category="CORRECTNESS" type="NM_WRONG_PACKAGE" />
    <BugPattern abbrev="Nm" category="BAD_PRACTICE" type="NM_WRONG_PACKAGE_INTENTIONAL" />
    <BugPattern abbrev="Nm" category="BAD_PRACTICE" type="NM_CONFUSING" />
    <BugPattern abbrev="Nm" category="CORRECTNESS" type="NM_METHOD_CONSTRUCTOR_CONFUSION" />
    <BugPattern abbrev="Nm" category="CORRECTNESS" type="NM_LCASE_HASHCODE" />
    <BugPattern abbrev="Nm" category="CORRECTNESS" type="NM_LCASE_TOSTRING" />
    <BugPattern abbrev="Nm" category="CORRECTNESS" type="NM_BAD_EQUAL" />
    <BugPattern abbrev="IA" category="STYLE"
        type="IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD" />
    <BugPattern abbrev="Nm" category="BAD_PRACTICE" type="NM_CLASS_NOT_EXCEPTION" />
    <BugPattern abbrev="RR" category="BAD_PRACTICE" type="RR_NOT_CHECKED" />
    <BugPattern abbrev="RR" category="BAD_PRACTICE" type="SR_NOT_CHECKED" />
    <BugPattern abbrev="Se" category="CORRECTNESS" type="SE_READ_RESOLVE_IS_STATIC" />
    <BugPattern abbrev="Se" category="STYLE" type="SE_PRIVATE_READ_RESOLVE_NOT_INHERITED" />
    <BugPattern abbrev="Se" category="STYLE" type="SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS" />
    <BugPattern abbrev="Se" category="BAD_PRACTICE" type="SE_NO_SUITABLE_CONSTRUCTOR" />
    <BugPattern abbrev="Se" category="BAD_PRACTICE"
        type="SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION" />
    <BugPattern abbrev="Se" category="BAD_PRACTICE" type="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE" />
    <BugPattern abbrev="SnVI" category="BAD_PRACTICE" type="SE_NO_SERIALVERSIONID" />
    <BugPattern abbrev="Se" category="BAD_PRACTICE" type="SE_READ_RESOLVE_MUST_RETURN_OBJECT" />
    <BugPattern abbrev="Se" category="BAD_PRACTICE" type="SE_TRANSIENT_FIELD_NOT_RESTORED" />
    <BugPattern abbrev="WS" category="MT_CORRECTNESS" type="WS_WRITEOBJECT_SYNC" />
    <BugPattern abbrev="RS" category="MT_CORRECTNESS" type="RS_READOBJECT_SYNC" />
    <BugPattern abbrev="Se" category="BAD_PRACTICE" type="SE_NONFINAL_SERIALVERSIONID" />
    <BugPattern abbrev="Se" category="BAD_PRACTICE" type="SE_NONSTATIC_SERIALVERSIONID" />
    <BugPattern abbrev="Se" category="BAD_PRACTICE" type="SE_NONLONG_SERIALVERSIONID" />
    <BugPattern abbrev="Se" category="CORRECTNESS" type="SE_METHOD_MUST_BE_PRIVATE" />
    <BugPattern abbrev="Se" category="BAD_PRACTICE" type="SE_BAD_FIELD" />
    <BugPattern abbrev="Se" category="BAD_PRACTICE" type="SE_INNER_CLASS" />
    <BugPattern abbrev="Se" category="BAD_PRACTICE" type="SE_BAD_FIELD_INNER_CLASS" />
    <BugPattern abbrev="Se" category="BAD_PRACTICE" type="SE_BAD_FIELD_STORE" />
    <BugPattern abbrev="SC" category="MT_CORRECTNESS" type="SC_START_IN_CTOR" />
    <BugPattern abbrev="SF" category="STYLE" cweid="484" type="SF_SWITCH_FALLTHROUGH" />
    <BugPattern abbrev="SF" category="STYLE" type="SF_SWITCH_NO_DEFAULT" />
    <BugPattern abbrev="SF" category="CORRECTNESS" cweid="484"
        type="SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH" />
    <BugPattern abbrev="SF" category="CORRECTNESS" cweid="484"
        type="SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW" />
    <BugPattern abbrev="SS" category="PERFORMANCE" type="SS_SHOULD_BE_STATIC" />
    <BugPattern abbrev="UuF" category="PERFORMANCE" type="UUF_UNUSED_FIELD" />
    <BugPattern abbrev="UrF" category="PERFORMANCE" type="URF_UNREAD_FIELD" />
    <BugPattern abbrev="UuF" category="STYLE" type="UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD" />
    <BugPattern abbrev="UrF" category="STYLE" type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" />
    <BugPattern abbrev="QF" category="STYLE" type="QF_QUESTIONABLE_FOR_LOOP" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_UNWRITTEN_FIELD" />
    <BugPattern abbrev="NP" category="STYLE" type="NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD" />
    <BugPattern abbrev="UwF" category="STYLE" type="UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR" />
    <BugPattern abbrev="UwF" category="CORRECTNESS" type="UWF_NULL_FIELD" />
    <BugPattern abbrev="UwF" category="CORRECTNESS" type="UWF_UNWRITTEN_FIELD" />
    <BugPattern abbrev="UwF" category="STYLE" type="UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD" />
    <BugPattern abbrev="SIC" category="CORRECTNESS" type="SIC_THREADLOCAL_DEADLY_EMBRACE" />
    <BugPattern abbrev="SIC" category="PERFORMANCE" type="SIC_INNER_SHOULD_BE_STATIC" />
    <BugPattern abbrev="SIC" category="PERFORMANCE" type="SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS" />
    <BugPattern abbrev="SIC" category="PERFORMANCE" type="SIC_INNER_SHOULD_BE_STATIC_ANON" />
    <BugPattern abbrev="Wa" category="MT_CORRECTNESS" type="WA_NOT_IN_LOOP" />
    <BugPattern abbrev="Wa" category="MT_CORRECTNESS" type="WA_AWAIT_NOT_IN_LOOP" />
    <BugPattern abbrev="No" category="MT_CORRECTNESS" type="NO_NOTIFY_NOT_NOTIFYALL" />
    <BugPattern abbrev="UC" category="STYLE" type="UC_USELESS_VOID_METHOD" />
    <BugPattern abbrev="UC" category="STYLE" type="UC_USELESS_CONDITION" />
    <BugPattern abbrev="UC" category="STYLE" type="UC_USELESS_CONDITION_TYPE" />
    <BugPattern abbrev="UC" category="STYLE" type="UC_USELESS_OBJECT" />
    <BugPattern abbrev="UC" category="STYLE" type="UC_USELESS_OBJECT_STACK" />
    <BugPattern abbrev="RANGE" category="CORRECTNESS" type="RANGE_ARRAY_INDEX" />
    <BugPattern abbrev="RANGE" category="CORRECTNESS" type="RANGE_ARRAY_OFFSET" />
    <BugPattern abbrev="RANGE" category="CORRECTNESS" type="RANGE_ARRAY_LENGTH" />
    <BugPattern abbrev="RANGE" category="CORRECTNESS" type="RANGE_STRING_INDEX" />
    <BugPattern abbrev="RV" category="CORRECTNESS" type="RV_RETURN_VALUE_IGNORED" />
    <BugPattern abbrev="RV" category="STYLE" type="RV_RETURN_VALUE_IGNORED_INFERRED" />
    <BugPattern abbrev="RV" category="STYLE" type="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT" />
    <BugPattern abbrev="RV" category="BAD_PRACTICE" cweid="253"
        type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" />
    <BugPattern abbrev="RV" category="CORRECTNESS" type="RV_EXCEPTION_NOT_THROWN" />
    <BugPattern abbrev="RV" category="CORRECTNESS"
        type="RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE" />
    <BugPattern abbrev="RV" category="STYLE" type="RV_CHECK_FOR_POSITIVE_INDEXOF" />
    <BugPattern abbrev="RV" category="STYLE" type="RV_DONT_JUST_NULL_CHECK_READLINE" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_ALWAYS_NULL" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_CLOSING_NULL" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_STORE_INTO_NONNULL_FIELD" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_ALWAYS_NULL_EXCEPTION" />
    <BugPattern abbrev="NP" category="STYLE"
        type="NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE" />
    <BugPattern abbrev="NP" category="STYLE" type="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE" />
    <BugPattern abbrev="NP" category="STYLE" type="NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_NULL_ON_SOME_PATH" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_NULL_ON_SOME_PATH_EXCEPTION" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_NULL_PARAM_DEREF" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_NULL_PARAM_DEREF_NONVIRTUAL" />
    <BugPattern abbrev="NP" category="CORRECTNESS"
        type="NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_NONNULL_PARAM_VIOLATION" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_NONNULL_RETURN_VIOLATION" />
    <BugPattern abbrev="NP" category="BAD_PRACTICE" type="NP_TOSTRING_COULD_RETURN_NULL" />
    <BugPattern abbrev="NP" category="BAD_PRACTICE" type="NP_CLONE_COULD_RETURN_NULL" />
    <BugPattern abbrev="NP" category="STYLE" type="NP_LOAD_OF_KNOWN_NULL_VALUE" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_GUARANTEED_DEREF" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH" />
    <BugPattern abbrev="OS" category="BAD_PRACTICE" type="OS_OPEN_STREAM" />
    <BugPattern abbrev="OS" category="BAD_PRACTICE" type="OS_OPEN_STREAM_EXCEPTION_PATH" />
    <BugPattern abbrev="PZLA" category="STYLE" type="PZLA_PREFER_ZERO_LENGTH_ARRAYS" />
    <BugPattern abbrev="UCF" category="STYLE" type="UCF_USELESS_CONTROL_FLOW" />
    <BugPattern abbrev="UCF" category="STYLE" type="UCF_USELESS_CONTROL_FLOW_NEXT_LINE" />
    <BugPattern abbrev="DMI" category="CORRECTNESS" type="DMI_ARGUMENTS_WRONG_ORDER" />
    <BugPattern abbrev="RCN" category="STYLE" type="RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE" />
    <BugPattern abbrev="RCN" category="CORRECTNESS"
        type="RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE" />
    <BugPattern abbrev="RCN" category="STYLE" type="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" />
    <BugPattern abbrev="RCN" category="STYLE" type="RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES" />
    <BugPattern abbrev="RCN" category="STYLE"
        type="RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE" />
    <BugPattern abbrev="UL" category="MT_CORRECTNESS" type="UL_UNRELEASED_LOCK" />
    <BugPattern abbrev="UL" category="MT_CORRECTNESS" type="UL_UNRELEASED_LOCK_EXCEPTION_PATH" />
    <BugPattern abbrev="RC" category="BAD_PRACTICE" type="RC_REF_COMPARISON_BAD_PRACTICE" />
    <BugPattern abbrev="RC" category="BAD_PRACTICE" type="RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN" />
    <BugPattern abbrev="RC" category="CORRECTNESS" type="RC_REF_COMPARISON" />
    <BugPattern abbrev="VA" category="CORRECTNESS"
        type="VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG" />
    <BugPattern abbrev="FS" category="BAD_PRACTICE" type="VA_FORMAT_STRING_USES_NEWLINE" />
    <BugPattern abbrev="FS" category="CORRECTNESS" type="VA_FORMAT_STRING_BAD_CONVERSION" />
    <BugPattern abbrev="FS" category="STYLE" type="VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN" />
    <BugPattern abbrev="USELESS_STRING" category="CORRECTNESS"
        type="VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY" />
    <BugPattern abbrev="FS" category="CORRECTNESS" type="VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT" />
    <BugPattern abbrev="FS" category="CORRECTNESS" deprecated="true"
        type="VA_FORMAT_STRING_ARG_MISMATCH" />
    <BugPattern abbrev="FS" category="CORRECTNESS" type="VA_FORMAT_STRING_BAD_ARGUMENT" />
    <BugPattern abbrev="FS" category="CORRECTNESS" type="VA_FORMAT_STRING_MISSING_ARGUMENT" />
    <BugPattern abbrev="FS" category="CORRECTNESS" type="VA_FORMAT_STRING_ILLEGAL" />
    <BugPattern abbrev="FS" category="CORRECTNESS" type="VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED" />
    <BugPattern abbrev="FS" category="CORRECTNESS"
        type="VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED" />
    <BugPattern abbrev="EC" category="CORRECTNESS"
        type="EC_UNRELATED_TYPES_USING_POINTER_EQUALITY" />
    <BugPattern abbrev="EC" category="CORRECTNESS" type="EC_UNRELATED_TYPES" />
    <BugPattern abbrev="EC" category="CORRECTNESS" type="EC_ARRAY_AND_NONARRAY" />
    <BugPattern abbrev="EC" category="CORRECTNESS" type="EC_NULL_ARG" />
    <BugPattern abbrev="EC" category="CORRECTNESS" type="EC_UNRELATED_INTERFACES" />
    <BugPattern abbrev="EC" category="CORRECTNESS" type="EC_UNRELATED_CLASS_AND_INTERFACE" />
    <BugPattern abbrev="MWN" category="MT_CORRECTNESS" type="MWN_MISMATCHED_WAIT" />
    <BugPattern abbrev="MWN" category="MT_CORRECTNESS" type="MWN_MISMATCHED_NOTIFY" />
    <BugPattern abbrev="SA" category="STYLE" type="SA_LOCAL_SELF_ASSIGNMENT" />
    <BugPattern abbrev="SA" category="CORRECTNESS"
        type="SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD" />
    <BugPattern abbrev="INT" category="CORRECTNESS" type="INT_BAD_COMPARISON_WITH_INT_VALUE" />
    <BugPattern abbrev="INT" category="CORRECTNESS" type="INT_BAD_COMPARISON_WITH_SIGNED_BYTE" />
    <BugPattern abbrev="INT" category="CORRECTNESS"
        type="INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE" />
    <BugPattern abbrev="INT" category="STYLE" type="INT_BAD_REM_BY_1" />
    <BugPattern abbrev="INT" category="STYLE" type="INT_VACUOUS_COMPARISON" />
    <BugPattern abbrev="INT" category="STYLE" type="INT_VACUOUS_BIT_OPERATION" />
    <BugPattern abbrev="BIT" category="CORRECTNESS" type="BIT_ADD_OF_SIGNED_BYTE" />
    <BugPattern abbrev="BIT" category="CORRECTNESS" type="BIT_IOR_OF_SIGNED_BYTE" />
    <BugPattern abbrev="BIT" category="BAD_PRACTICE" type="BIT_SIGNED_CHECK" />
    <BugPattern abbrev="BIT" category="CORRECTNESS" type="BIT_SIGNED_CHECK_HIGH_BIT" />
    <BugPattern abbrev="BIT" category="CORRECTNESS" type="BIT_AND" />
    <BugPattern abbrev="BIT" category="CORRECTNESS" type="BIT_AND_ZZ" />
    <BugPattern abbrev="BIT" category="CORRECTNESS" type="BIT_IOR" />
    <BugPattern abbrev="SA" category="CORRECTNESS" type="SA_FIELD_SELF_ASSIGNMENT" />
    <BugPattern abbrev="SA" category="STYLE" type="SA_LOCAL_DOUBLE_ASSIGNMENT" />
    <BugPattern abbrev="SA" category="STYLE" type="SA_FIELD_DOUBLE_ASSIGNMENT" />
    <BugPattern abbrev="SA" category="CORRECTNESS" type="SA_FIELD_SELF_COMPUTATION" />
    <BugPattern abbrev="SA" category="CORRECTNESS" type="SA_LOCAL_SELF_COMPUTATION" />
    <BugPattern abbrev="SA" category="CORRECTNESS" type="SA_FIELD_SELF_COMPARISON" />
    <BugPattern abbrev="SA" category="CORRECTNESS" type="SA_LOCAL_SELF_COMPARISON" />
    <BugPattern abbrev="LI" category="MT_CORRECTNESS" deprecated="true" experimental="true"
        type="LI_LAZY_INIT_INSTANCE" />
    <!-- has never been generated? -->
    <BugPattern abbrev="LI" category="MT_CORRECTNESS" cweid="543" type="LI_LAZY_INIT_STATIC" />
    <BugPattern abbrev="LI" category="MT_CORRECTNESS" cweid="543"
        type="LI_LAZY_INIT_UPDATE_STATIC" />
    <BugPattern abbrev="JLM" category="MT_CORRECTNESS"
        type="JLM_JSR166_UTILCONCURRENT_MONITORENTER" />
    <BugPattern abbrev="JLM" category="MT_CORRECTNESS"
        type="JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT" />
    <BugPattern abbrev="JLM" category="MT_CORRECTNESS" type="JLM_JSR166_LOCK_MONITORENTER" />
    <BugPattern abbrev="UPM" category="PERFORMANCE" type="UPM_UNCALLED_PRIVATE_METHOD" />
    <BugPattern abbrev="UMAC" category="CORRECTNESS"
        type="UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS" />
    <BugPattern abbrev="ODR" category="BAD_PRACTICE" type="ODR_OPEN_DATABASE_RESOURCE" />
    <BugPattern abbrev="ODR" category="BAD_PRACTICE"
        type="ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH" />
    <BugPattern abbrev="SBSC" category="PERFORMANCE" type="SBSC_USE_STRINGBUFFER_CONCATENATION" />
    <BugPattern abbrev="IIL" category="PERFORMANCE" experimental="true"
        type="IIL_ELEMENTS_GET_LENGTH_IN_LOOP" />
    <BugPattern abbrev="IIL" category="PERFORMANCE" experimental="true"
        type="IIL_PREPARE_STATEMENT_IN_LOOP" />
    <BugPattern abbrev="IIL" category="PERFORMANCE" experimental="true"
        type="IIL_PATTERN_COMPILE_IN_LOOP" />
    <BugPattern abbrev="IIL" category="PERFORMANCE" experimental="true"
        type="IIL_PATTERN_COMPILE_IN_LOOP_INDIRECT" />
    <BugPattern abbrev="IIO" category="PERFORMANCE" experimental="true"
        type="IIO_INEFFICIENT_INDEX_OF" />
    <BugPattern abbrev="IIO" category="PERFORMANCE" experimental="true"
        type="IIO_INEFFICIENT_LAST_INDEX_OF" />
    <BugPattern abbrev="ITA" category="PERFORMANCE" experimental="true"
        type="ITA_INEFFICIENT_TO_ARRAY" />
    <BugPattern abbrev="IJU" category="CORRECTNESS"
        type="IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD" />
    <BugPattern abbrev="IJU" category="CORRECTNESS" type="IJU_BAD_SUITE_METHOD" />
    <BugPattern abbrev="IJU" category="CORRECTNESS" type="IJU_SETUP_NO_SUPER" />
    <BugPattern abbrev="IJU" category="CORRECTNESS" type="IJU_TEARDOWN_NO_SUPER" />
    <BugPattern abbrev="IJU" category="CORRECTNESS" type="IJU_SUITE_NOT_STATIC" />
    <BugPattern abbrev="IJU" category="CORRECTNESS" type="IJU_NO_TESTS" />
    <BugPattern abbrev="BOA" category="CORRECTNESS" type="BOA_BADLY_OVERRIDDEN_ADAPTER" />
    <BugPattern abbrev="SQL" category="CORRECTNESS" deprecated="true" experimental="true"
        type="BRSA_BAD_RESULTSET_ACCESS" />
    <!-- deprecated in favor of SQL_BAD_RESULTSET_ACCESS -->
    <BugPattern abbrev="SQL" category="CORRECTNESS" type="SQL_BAD_RESULTSET_ACCESS" />
    <BugPattern abbrev="SQL" category="CORRECTNESS" type="SQL_BAD_PREPARED_STATEMENT_ACCESS" />
    <BugPattern abbrev="SIO" category="CORRECTNESS" type="SIO_SUPERFLUOUS_INSTANCEOF" />
    <BugPattern abbrev="BAC" category="CORRECTNESS" experimental="true"
        type="BAC_BAD_APPLET_CONSTRUCTOR" />
    <BugPattern abbrev="EC" category="CORRECTNESS" type="EC_INCOMPATIBLE_ARRAY_COMPARE" />
    <BugPattern abbrev="EC" category="CORRECTNESS" type="EC_BAD_ARRAY_COMPARE" />
    <BugPattern abbrev="STI" category="CORRECTNESS" type="STI_INTERRUPTED_ON_CURRENTTHREAD" />
    <BugPattern abbrev="STI" category="CORRECTNESS" type="STI_INTERRUPTED_ON_UNKNOWNTHREAD" />
    <BugPattern abbrev="DLS" category="STYLE" type="DLS_DEAD_LOCAL_STORE_IN_RETURN" />
    <BugPattern abbrev="DLS" category="CORRECTNESS" type="DLS_DEAD_LOCAL_INCREMENT_IN_RETURN" />
    <BugPattern abbrev="DLS" category="CORRECTNESS" type="DLS_DEAD_STORE_OF_CLASS_LITERAL" />
    <BugPattern abbrev="DLS" category="STYLE" type="DLS_DEAD_LOCAL_STORE" />
    <BugPattern abbrev="DLS" category="STYLE" type="DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD" />
    <BugPattern abbrev="DLS" category="STYLE" type="DLS_DEAD_LOCAL_STORE_OF_NULL" />
    <BugPattern abbrev="IP" category="CORRECTNESS" cweid="563"
        type="IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN" />
    <BugPattern abbrev="MF" category="CORRECTNESS" type="MF_METHOD_MASKS_FIELD" />
    <BugPattern abbrev="MF" category="CORRECTNESS" type="MF_CLASS_MASKS_FIELD" />
    <BugPattern abbrev="WMI" category="PERFORMANCE" type="WMI_WRONG_MAP_ITERATOR" />
    <BugPattern abbrev="ISC" category="BAD_PRACTICE" type="ISC_INSTANTIATE_STATIC_CLASS" />
    <BugPattern abbrev="REC" category="STYLE" cweid="396" type="REC_CATCH_EXCEPTION" />
    <BugPattern abbrev="FE" category="STYLE" type="FE_FLOATING_POINT_EQUALITY" />
    <BugPattern abbrev="FE" category="CORRECTNESS" type="FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER" />
    <BugPattern abbrev="UM" category="PERFORMANCE" type="UM_UNNECESSARY_MATH" />
    <BugPattern abbrev="CD" category="STYLE" experimental="true" type="CD_CIRCULAR_DEPENDENCY" />
    <BugPattern abbrev="RI" category="STYLE" type="RI_REDUNDANT_INTERFACES" />
    <BugPattern abbrev="MTIA" category="STYLE" type="MTIA_SUSPECT_STRUTS_INSTANCE_FIELD" />
    <BugPattern abbrev="MTIA" category="STYLE" type="MTIA_SUSPECT_SERVLET_INSTANCE_FIELD" />
    <BugPattern abbrev="PS" category="STYLE" type="PS_PUBLIC_SEMAPHORES" />
    <BugPattern abbrev="ICAST" category="CORRECTNESS" type="ICAST_INT_2_LONG_AS_INSTANT" />
    <BugPattern abbrev="ICAST" category="STYLE" type="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG" />
    <BugPattern abbrev="ICAST" category="STYLE" type="ICAST_IDIV_CAST_TO_DOUBLE" />
    <BugPattern abbrev="ICAST" category="CORRECTNESS"
        type="ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL" />
    <BugPattern abbrev="ICAST" category="CORRECTNESS"
        type="ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND" />
    <BugPattern abbrev="NP" category="CORRECTNESS" type="NP_NULL_INSTANCEOF" />
    <BugPattern abbrev="NP" category="CORRECTNESS" deprecated="true" experimental="true"
        type="BC_NULL_INSTANCEOF" />
    <!-- deprecated in favor of NP_NULL_INSTANCEOF -->
    <BugPattern abbrev="DMI" category="BAD_PRACTICE" type="DMI_RANDOM_USED_ONLY_ONCE" />
    <BugPattern abbrev="DMI" category="CORRECTNESS" type="DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT" />
    <BugPattern abbrev="BC" category="BAD_PRACTICE"
        type="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS" />
    <BugPattern abbrev="BC" category="STYLE" type="BC_BAD_CAST_TO_CONCRETE_COLLECTION" />
    <BugPattern abbrev="BC" category="STYLE" type="BC_UNCONFIRMED_CAST" />
    <BugPattern abbrev="BC" category="STYLE" type="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" />

    <BugPattern abbrev="BC" category="CORRECTNESS" deprecated="true"
        type="BC_IMPOSSIBLE_CAST_PRIMITIVE_ARRAY" />
    <!-- deprecated in favor of BC_IMPOSSIBLE_CAST -->
    <BugPattern abbrev="BC" category="CORRECTNESS" cweid="570" type="BC_IMPOSSIBLE_CAST" />
    <BugPattern abbrev="BC" category="CORRECTNESS" cweid="570" type="BC_IMPOSSIBLE_DOWNCAST" />
    <BugPattern abbrev="BC" category="CORRECTNESS" cweid="570"
        type="BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY" />
    <BugPattern abbrev="BC" category="CORRECTNESS" cweid="570" type="BC_IMPOSSIBLE_INSTANCEOF" />
    <BugPattern abbrev="BC" category="STYLE" cweid="571" type="BC_VACUOUS_INSTANCEOF" />
    <BugPattern abbrev="BC" category="STYLE" type="BC_BAD_CAST_TO_ABSTRACT_COLLECTION" />
    <BugPattern abbrev="RE" category="CORRECTNESS" type="RE_POSSIBLE_UNINTENDED_PATTERN" />
    <BugPattern abbrev="RE" category="CORRECTNESS" type="RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION" />
    <BugPattern abbrev="RE" category="CORRECTNESS"
        type="RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION" />
    <BugPattern abbrev="DLS" category="CORRECTNESS" type="DLS_OVERWRITTEN_INCREMENT" />
    <BugPattern abbrev="BSHIFT" category="CORRECTNESS" type="ICAST_BAD_SHIFT_AMOUNT" />
    <BugPattern abbrev="BSHIFT" category="CORRECTNESS" type="BSHIFT_WRONG_ADD_PRIORITY" />
    <BugPattern abbrev="IM" category="CORRECTNESS" type="IM_MULTIPLYING_RESULT_OF_IREM" />
    <BugPattern abbrev="IM" category="STYLE" type="IM_BAD_CHECK_FOR_ODD" />
    <BugPattern abbrev="IM" category="STYLE" type="IM_AVERAGE_COMPUTATION_COULD_OVERFLOW" />
    <BugPattern abbrev="DMI" category="CORRECTNESS" type="DMI_INVOKING_HASHCODE_ON_ARRAY" />
    <BugPattern abbrev="USELESS_STRING" category="CORRECTNESS"
        type="DMI_INVOKING_TOSTRING_ON_ARRAY" />
    <BugPattern abbrev="USELESS_STRING" category="CORRECTNESS"
        type="DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY" />
    <BugPattern abbrev="BSHIFT" category="STYLE" type="ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT" />
    <BugPattern abbrev="DMI" category="STYLE" type="DMI_HARDCODED_ABSOLUTE_FILENAME" />
    <BugPattern abbrev="DMI" category="CORRECTNESS" type="DMI_BAD_MONTH" />
    <BugPattern abbrev="DMI" category="STYLE" type="DMI_USELESS_SUBSTRING" />
    <BugPattern abbrev="DMI" category="CORRECTNESS" type="DMI_CALLING_NEXT_FROM_HASNEXT" />
    <BugPattern abbrev="ST" category="STYLE" type="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" />
    <BugPattern abbrev="SWL" category="MT_CORRECTNESS" type="SWL_SLEEP_WITH_LOCK_HELD" />
    <BugPattern abbrev="J2EE" category="BAD_PRACTICE" cweid="579"
        type="J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION" />
    <BugPattern abbrev="DMI" category="STYLE" type="DMI_NONSERIALIZABLE_OBJECT_WRITTEN" />
    <BugPattern abbrev="DB" category="STYLE" type="DB_DUPLICATE_BRANCHES" />
    <BugPattern abbrev="DB" category="STYLE" type="DB_DUPLICATE_SWITCH_CLAUSES" />
    <BugPattern abbrev="IMA" category="PERFORMANCE" experimental="true"
        type="IMA_INEFFICIENT_MEMBER_ACCESS" />
    <BugPattern abbrev="XFB" category="STYLE" type="XFB_XML_FACTORY_BYPASS" />
    <BugPattern abbrev="USM" category="STYLE" experimental="true"
        type="USM_USELESS_SUBCLASS_METHOD" />
    <BugPattern abbrev="USM" category="STYLE" experimental="true"
        type="USM_USELESS_ABSTRACT_METHOD" />
    <BugPattern abbrev="CI" category="STYLE" type="CI_CONFUSED_INHERITANCE" />
    <BugPattern abbrev="QBA" category="CORRECTNESS" cweid="481"
        type="QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT" />
    <BugPattern abbrev="GC" category="BAD_PRACTICE" type="GC_UNCHECKED_TYPE_IN_GENERIC_CALL" />
    <BugPattern abbrev="GC" category="CORRECTNESS" type="GC_UNRELATED_TYPES" />
    <BugPattern abbrev="PZ" category="BAD_PRACTICE"
        type="PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS" />
    <BugPattern abbrev="DMI" category="BAD_PRACTICE"
        type="DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS" />
    <BugPattern abbrev="DMI" category="BAD_PRACTICE"
        type="DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION" />
    <BugPattern abbrev="DMI" category="CORRECTNESS" type="DMI_VACUOUS_SELF_COLLECTION_CALL" />
    <BugPattern abbrev="DMI" category="CORRECTNESS" type="DMI_DOH" />
    <BugPattern abbrev="DMI" category="CORRECTNESS"
        type="DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES" />
    <BugPattern abbrev="TQ" category="CORRECTNESS"
        type="TQ_UNKNOWN_VALUE_USED_WHERE_ALWAYS_STRICTLY_REQUIRED" />
    <BugPattern abbrev="TQ" category="CORRECTNESS"
        type="TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS" />
    <BugPattern abbrev="TQ" category="CORRECTNESS"
        type="TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED" />
    <BugPattern abbrev="TQ" category="CORRECTNESS"
        type="TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED" />
    <BugPattern abbrev="TQ" category="CORRECTNESS"
        type="TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK" />
    <BugPattern abbrev="TQ" category="CORRECTNESS"
        type="TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK" />
    <BugPattern abbrev="TQ" category="STYLE"
        type="TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK" />
    <BugPattern abbrev="TQ" category="STYLE"
        type="TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK" />
    <BugPattern abbrev="OBL" category="EXPERIMENTAL" experimental="true"
        type="OBL_UNSATISFIED_OBLIGATION" />
    <BugPattern abbrev="OBL" category="EXPERIMENTAL" experimental="true"
        type="OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE" />
    <BugPattern abbrev="FB" category="CORRECTNESS" type="FB_UNEXPECTED_WARNING" />
    <BugPattern abbrev="FB" category="CORRECTNESS" type="FB_MISSING_EXPECTED_WARNING" />
    <BugPattern abbrev="RV" category="MT_CORRECTNESS"
        type="RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED" />
    <BugPattern abbrev="LG" category="EXPERIMENTAL" type="LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE" />
    <BugPattern abbrev="Dm" category="I18N" type="DM_DEFAULT_ENCODING" />
    <BugPattern abbrev="NP" category="STYLE" type="NP_METHOD_RETURN_RELAXING_ANNOTATION" />
    <BugPattern abbrev="NP" category="STYLE" type="NP_METHOD_PARAMETER_TIGHTENS_ANNOTATION" />
    <BugPattern abbrev="NP" category="STYLE" deprecated="true"
        type="NP_METHOD_PARAMETER_RELAXING_ANNOTATION" />
</FindbugsPlugin>